# -*- coding: utf-8 -*-
"""asthma-disease.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1n3i55WqARlkceM_pzcAKoucF1e3L-Zdr
"""

from google.colab import drive
drive.mount('/content/drive')

import os
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier,  GradientBoostingClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
from sklearn.neighbors import KNeighborsClassifier
#numpy: Bilimsel hesaplamalar için kullanilir.
#matplotlib.pyplot: Veri görsellestirme icin kullanilir.
#seaborn: İstatistiksel veri görsellestirme icin kullanilir.
#scikit-learn: Makine ögrenimi icin kullanilir.

data = pd.read_csv('/content/drive/MyDrive/processed-data.csv')
data.head()


#Semptomlarin Gorulme Sikligi
symptoms = ['Tiredness', 'Dry-Cough', 'Difficulty-in-Breathing', 'Sore-Throat', 'Pains', 'Nasal-Congestion', 'Runny-Nose']
symptom_counts = data[symptoms].sum()
symptom_counts

# Yas Gruplarina Gore Dagilim
age_groups = ['Age_0-9', 'Age_10-19', 'Age_20-24', 'Age_25-59', 'Age_60+']
age_distribution = data[age_groups].sum()
age_distribution

# Cinsiyete Gore Dagilim
gender_groups = ['Gender_Female', 'Gender_Male']
gender_distribution = data[gender_groups].sum()
gender_distribution

# Hastaligin Agirlik Dagilimi
severity_levels = ['Severity_Mild', 'Severity_Moderate', 'Severity_None']
severity_distribution = data[severity_levels].sum()
severity_distribution

fig, ax = plt.subplots(figsize=(10, 6))

symptom_counts.sort_values().plot(kind='barh', ax=ax, color='skyblue', edgecolor='black')
ax.set_title('Frequency of Symptoms')
ax.set_xlabel('Count')
ax.set_ylabel('Symptoms')

plt.tight_layout()
plt.show()

#Yas Dagilimlarinin Grafiklestirilmesi
fig, ax = plt.subplots(figsize=(6, 6))
age_distribution.plot(kind='pie', ax=ax, autopct='%1.2f%%', startangle=90)
ax.set_title('Distribution by Age Group')
ax.set_ylabel('')

plt.tight_layout()
plt.show()

# Cinsiyet Dagiliminin Grafiklestirilmesi
fig, ax = plt.subplots(figsize=(6, 6))
gender_distribution.plot(kind='pie', ax=ax, autopct='%1.2f%%', startangle=90)
ax.set_title('Distribution by Gender')
ax.set_ylabel('')

plt.tight_layout()
plt.show()

# Hastaligin Siddet Dagiliminin Grafiklestirilmesi
fig, ax = plt.subplots(figsize=(6, 6))
severity_distribution.plot(kind='pie', ax=ax, autopct='%1.4f%%', startangle=90)
ax.set_title('Distribution of Severity')
ax.set_ylabel('')

plt.tight_layout()
plt.show()


correlation_matrix = data[symptoms].corr()

fig, ax = plt.subplots(figsize=(10, 8))

sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', center=0, ax=ax)
ax.set_title('Correlation Matrix for Symptoms')

plt.tight_layout()
plt.show()

plt.figure(figsize=(20,20))
ax=sns.heatmap(data.corr(),annot=True,cmap='coolwarm')
plt.tight_layout()
plt.show()


# Hastaligin siddeti ve semptomlar arasindaki iliski
severity_symptom_means = data.groupby(by=[col for col in data.columns if "Severity_" in col])[symptoms].mean()

severity_symptom_means = severity_symptom_means.transpose()
severity_symptom_means


# Semptomlar ve yas arasindaki iliski
symptoms_by_age = data.groupby(by=[col for col in data.columns if "Age_" in col])[symptoms].mean()

symptoms_by_age = symptoms_by_age.transpose()
symptoms_by_age

# Cinsiyet ve semptomlar arasindaki iliski
symptoms_by_gender = data.groupby(by=[col for col in data.columns if "Gender_" in col])[symptoms].mean()

symptoms_by_gender = symptoms_by_gender.transpose()
symptoms_by_gender

# Yas gruplari ile hastaligin siddeti arasindaki iliski
severity_by_age = data.groupby(by=[col for col in data.columns if "Age_" in col])[severity_levels].mean()

severity_by_age = severity_by_age.transpose()
severity_by_age